@layer ui-frame {
    :host
    {
        &, :where(*), ::slotted(*) {
            /* */
            -webkit-tap-highlight-color: rgba(0,0,0,0);
            -webkit-tap-highlight-color: transparent;
            user-drag: none;
            user-select: none;
            -webkit-user-drag: none;
            -moz-user-drag: none;

            /* */
            box-sizing: border-box;

            /* */
            white-space: nowrap;
            white-space-collapse: collapse;
            text-wrap: nowrap;
            text-spacing-trim: trim-start;

            //
            -webkit-font-smoothing: none;
            -moz-osx-font-smoothing: grayscale;
            text-rendering: optimizeSpeed;
            font-smooth: 0px;
            font-smooth: never;

            //
            //-webkit-perspective: 1000px;
            //-moz-perspective: 1000px;
            //-ms-perspective: 1000px;
            //perspective: 1000px;

            //
            -webkit-backface-visibility: visible;
            -moz-backface-visibility: visible;
            -ms-backface-visibility: visible;
            backface-visibility: visible;

            /* Enable hardware acceleration */
            -webkit-transform: translate3d(0, 0, 0);
            -moz-transform: translate3d(0, 0, 0);
            -ms-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);

            //
            transform-origin: 50% 50%;

            /* Some filter hack */
            filter: grayscale(0%);

            //
            //scrollbar-width: none;
            //overflow: hidden;

            /* Disable transition by default */
            -webkit-transition: none;
            -moz-transition: none;
            -o-transition: none;
            transition: none;
        }

        //
        & {
            --initial-inline-size: 48rem;
            --initial-block-size : 32rem;
            --title-bar-height   : 2.5rem;
            --height-adjust      : 0px;

            /* */
            --bound-inline-size: calc(100cqi);
            --bound-block-size : calc(100cqb - var(--height-adjust, 0px));

            /* */
            --safe-area-left : 0px;
            --safe-area-right: 0px;

            /* */
            --ds-x: clamp(0px, var(--rx, 0px), var(--bound-inline-size, 100%));
            --ds-y: clamp(0px, var(--ry, 0px), var(--bound-block-size , 100%));

            /* */
            --rs-x: clamp(0px, calc(var(--resize-x, 0) * var(--zpx, 1px)), calc(var(--bound-inline-size, 0px) - var(--initial-inline-size, 100%)));
            --rs-y: clamp(0px, calc(var(--resize-y, 0) * var(--zpx, 1px)), calc(var(--bound-block-size , 0px) - var(--initial-block-size , 100%)));

            /* */
            --inline-size: min(calc(var(--initial-inline-size, 100%) + var(--rs-x, 0px)), var(--bound-inline-size, 100%));
            --block-size : min(calc(var(--initial-block-size , 100%) + var(--rs-y, 0px)), var(--bound-block-size , 100%));

            /* */
            --rx: clamp(0px, calc(var(--drag-x, 0) * var(--zpx, 1px)), max(calc(var(--bound-inline-size, 100%) - var(--inline-size, 100%)), 0px));
            --ry: clamp(0px, calc(var(--drag-y, 0) * var(--zpx, 1px)), max(calc(var(--bound-block-size , 100%) - var(--block-size , 100%)), 0px));
        }

        /* */
        ::slotted(.ui-content) {
            //will-change: transform, contents;
        }

        /* */
        & {
            /* */
            inline-size: clamp(0px, var(--inline-size, 100%), calc(var(--bound-inline-size, 0px) /*- var(--rx, 0px)*/));
            block-size : clamp(0px, var(--block-size , 100%), calc(var(--bound-block-size , 0px) /*- var(--ry, 0px)*/));

            /* */
            position: fixed;
            inset-inline-start: var(--ds-x, 0px);
            inset-block-start : var(--ds-y, 0px);
            inset-inline-end  : auto;
            inset-block-end   : auto;

            /* */
            display: inline grid;
            grid-template-columns: minmax(0px, 1fr);
            grid-template-rows:
                [title-bar] minmax(0px, max-content)
                [content]   minmax(0px, 1fr)
                [status]    minmax(1px, max-content);

            /* */
            container-type: size;
            container-name: ui-frame;
            contain: strict;
            overflow: hidden;

            /* */
            outline: solid 0.5px var(--current-surface-color);
            border-radius: 0.125rem;
            box-shadow: 0rem 0rem 1rem #10101060;

            /* */
            box-sizing: border-box;
            pointer-events: auto;
            z-index: calc(999 + var(--z-index, 0));

            /* */
            user-select: none;
            touch-action: none;
            resize: none;
        }

        /* */
        & :where(*)
        {
            user-select: none;
            touch-action: none;
        }

        /* */
        & .ui-title-bar
        {

            & {
                font-size: 0.9rem;
                font-weight: bold;

                inline-size: 100%;
                block-size: 100%;
                min-block-size: var(--title-bar-height, 2.5rem);
                text-align: start;

                overflow: hidden;
                box-sizing: border-box;

                display: grid;
                grid-template-rows: minmax(0px, 1fr);
                grid-template-columns:
                    [title] minmax(0px, 1fr)
                    [buttons] minmax(var(--title-bar-height, 2.5rem), max-content);

                grid-column: 1 / -1;
                grid-row: 1 / 1 span;
                grid-row: title-bar;

                place-items: safe center;
                place-content: safe center;
                align-items: safe center;
                align-content: safe center;

                /* */
                user-select: none;
                pointer-events: none;
            }

            /* */
            ::slotted(*)
            {
                inline-size: 100%;
                block-size: 100%;
                place-items: safe center;
                place-content: safe center;
                align-items: safe center;
                align-content: safe center;
                pointer-events: none;
                user-select: none;
                box-sizing: border-box;
                text-align: start;

                grid-column: 1 / -1;
                grid-row: 1 / 1 span;
                padding-inline: 1rem;
            }

            /* */
            & .ui-title-handle
            {
                & {
                    display: flex;
                    flex-direction: row;
                    flex-wrap: no-wrap;
                    box-sizing: border-box;
                    text-align: start;

                    inline-size: 100%;
                    block-size: 100%;

                    grid-column: title;
                    grid-row: 1 / 1 span;

                    place-content: safe center;
                    place-items: safe center;

                    cursor: move;
                    pointer-events: auto;
                    user-select: none;
                    touch-action: none;
                }

                &:active { cursor: move; };
                &:hover  { cursor: move; };
            }
        }

        /* */
        & .ui-phantom, ::slotted(.ui-phantom)
        {
            object-fit: cover;
            object-position: center;
            background-color: transparent;
            position: relative;

            /* */
            inline-size: 100%;
            block-size: 100%;
            box-sizing: border-box;
            display: block;

            /* */
            grid-column: 1 / -1;
            grid-row: content;
            grid-row: 2 / 2 span;

            /* */
            pointer-events: none;
            user-select: none;
            overflow: hidden;

            /* */
            will-change: contents, display;
        }

        /* */
        & .ui-content-box, ::slotted(.ui-content)
        {
            inline-size: 100%;
            block-size: 100%;
            box-sizing: border-box;
            position: relative;

            /* */
            grid-column: 1 / -1;
            grid-row: content;
            grid-row: 2 / 2 span;

            /* */
            pointer-events: none;
            user-select: none;

            /* */
            container-type: size;
            container-name: ui-content;
            contain: strict;
            overflow: hidden;

            /* */
            will-change: contents, display;
        }

        /* */
        & .ui-content-box {
            background-color: transparent;
            display: contents;
        }

        /* */
        & .ui-buttons
        {
            & {
                display: flex;
                place-items: safe center;
                place-content: safe center;
                inline-size: 100%;
                block-size: 100%;
                min-inline-size: max-content;
                grid-row: 1 / 1 span;
                grid-column: buttons;
                pointer-events: none;
                user-select: none;
                box-sizing: border-box;
            }

            /* */
            & > *
            {
                & {
                    display: flex;
                    inline-size: max-content;
                    block-size: 100%;
                    aspect-ratio: 1 / 1;
                    background-image: transparent;
                    place-items: safe center;
                    place-content: safe center;
                    cursor: pointer;
                    pointer-events: auto;
                    box-sizing: border-box;
                    border: none 0px transparent;
                    outline: none 0px transparent;
                    padding: 0.5rem;
                    user-select: none;
                }

                /* */
                & > * {
                    display: flex;
                    inline-size: max-content;
                    block-size: 100%;
                    aspect-ratio: 1 / 1;
                    box-sizing: border-box;
                    border: none 0px transparent;
                    outline: none 0px transparent;
                    pointer-events: none;
                    user-select: none;
                }
            }
        }

        /* */
        & .ui-resize
        {
            position: absolute;
            inset: auto;
            inset-inline-end: 0px;
            inset-block-end: 0px;
            inline-size: 1rem;
            block-size: 1rem;
            box-sizing: border-box;

            /* */
            background-color: transparent;
            cursor: nwse-resize;

            /* */
            pointer-events: auto;
            user-select: none;
            touch-action: none;
            resize: none;
        }

        //
        @media not (((hover: hover) or (pointer: fine)) and ((width >= 9in) or (orientation: landscape)))
        {
            & {
                inline-size: 100%;
                block-size: 100%;
                inset-inline-start: 0px;
                inset-block-start : 0px;

                //
                --title-bar-height: 2rem;
            }

            //
            .ui-title-bar {  min-block-size: var(--title-bar-height, 2rem); }
            .ui-title-bar :where(*),
            .ui-title-bar ::slotted(*) {
                text-align: start;
                display: none !important;
            }
        }
    }

    //
    :host(ui-frame:empty)  { display: none; };
    :host(ui-frame:has(::slotted(.ui-content[data-hidden]))) { display: none; };
    :host(ui-frame[data-hidden]) { display: none; };
    :host(ui-frame:not(:has(.ui-content))) { display: none; };
    :host(ui-frame:not(:has(::slotted(.ui-content)))) { display: none; };

    // if has identified, do top level
    :host(ui-frame:has(*:target)),
    :host(ui-frame:target)
    {
        --z-index: 0;
        z-index: calc(1099 + var(--z-index, 0));
        display: inline grid;

        // revert visibility if hidden (may not help)
        ::slotted(.ui-content[data-hidden]) {
            display: revert-layer;
        }
    }

    //
    :host(ui-frame[data-dragging]) * {
        will-change: transform, inset !important;
        animation: none !important;
        animation-duration: 0ms !important;
        transition: none !important;
        transition-duration: 0ms !important;
        box-shadow: none !important;
    }

    //
    :host(ui-frame[data-dragging]) :where(svg, input, .u2-input, span, ui-icon) {
        content-visibility: hidden !important;
    }

    //
    :host(ui-frame[data-dragging]) :where(ui-icon) {
        visibility: hidden !important;
    }
}
