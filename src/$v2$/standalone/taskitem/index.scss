@layer ui-task {

    //
    :host(ui-task)
    {
        /* */
        &, :where(*), ::slotted(*) {
            -webkit-tap-highlight-color: rgba(0,0,0,0);
            -webkit-tap-highlight-color: transparent;
            user-drag: none;
            user-select: none;
            -webkit-user-drag: none;
            -moz-user-drag: none;
            touch-action: none;

            /* */
            box-sizing: border-box;
            pointer-events: none;
        }

        //
        :where(span), ::slotted(span) {
            background-color: transparent;
        }

        //
        & {
            border-block-start: solid 0.25rem transparent;

            //
            pointer-events: auto;
            padding: 0.6666rem;
            cursor: pointer;
            box-sizing: border-box;

            //
            min-inline-size: 3.5rem;
            inline-size: max-content;
            block-size: 100%;

            //
            display: flex;
            flex-direction: row;
            place-content: center;
            place-items: center;

            //
            z-index: calc(9999 + var(--z-index, 0));
        }

        //
        &::slotted(*) { display: none; };
        &::slotted(ui-icon:first-child), ui-icon {
            inline-size: max-content;
            block-size: 100%;
            box-sizing: border-box;
            aspect-ratio: 1 / 1;

            //
            pointer-events: none;
            interactivity: inert;

            //
            translate: 0px -0.125rem;
        }

        //
        @media (((hover: hover) or (pointer: fine)) and ((width >= 9in) or (orientation: landscape)))
            {& span { display: none; }}

        //
        @media not (((hover: hover) or (pointer: fine)) and ((width >= 9in) or (orientation: landscape)))
            {& {
                display: inline grid;
                grid-template-columns: minmax(4rem, max-content) minmax(0px, 1fr);
                grid-template-rows: minmax(0px, 1fr);
                max-block-size: 4rem;
                inline-size: 100%;
            }

            //
            &::slotted(ui-icon:first-child), ui-icon {
                padding: 0.5rem;
            }

            //
            & span {
                translate: 0px -0.125rem;
                padding-inline-start: 0rem;
                display: inline flow;
                text-align: start;
                justify-self: start;
                inline-size: max-content;
                block-size: max-content;
            }}
    }

    //
    @media (((hover: hover) or (pointer: fine)) and ((width >= 9in) or (orientation: landscape))) {
        :host(ui-task.ui-focus) { --tm-bg-alpha: 1; border-block-start: solid 0.25rem oklch(from var(--rv-color, currentColor) l c h / 1) !important; }
    }

    //
    @media not (((hover: hover) or (pointer: fine)) and ((width >= 9in) or (orientation: landscape))) {
        :host(ui-task.ui-focus) {
            & { --tm-bg-alpha: 1; };
            & { background-color: oklch(from var(--rv-color, currentColor) l c h / 1) !important; };
            &, & :where(*) { color: oklch(from var(--rv-bg-color, currentColor) l c h / 1) !important; };
            & :where(ui-icon) { background-color: oklch(from var(--rv-bg-color, currentColor) l c h / 1) !important; }
        }
    }

    :host(ui-task:not(.ui-active))  { opacity: 0.5; --opacity: 0.5 !important; }
}
